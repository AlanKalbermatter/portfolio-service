# Application Configuration
server:
  port: ${PORT:8080}

spring:
  application:
    name: alan-kalbermatter-portfolio

  # Default profile
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

# Actuator Configuration for Health Checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized
  health:
    defaults:
      enabled: true
    db:
      enabled: true

# CORS Configuration - Parameterized for security
spring.web.cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200,http://localhost:8080}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"

# Logging Configuration
logging:
  level:
    org.hibernate.SQL: ${SQL_LOG_LEVEL:ERROR}
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
    com.akalber.alankalbermatter: ${APP_LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}

---
# Development Profile (H2 Database)
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:portfolio
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  h2:
    console:
      enabled: true
      path: /h2-console

---
# Docker Profile (PostgreSQL Database) - Parameterized
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:portfolio_db}
    driverClassName: org.postgresql.Driver
    username: ${DB_USERNAME:portfolio_user}
    password: ${DB_PASSWORD:portfolio_password}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false

---
# Railway Production Profile (PostgreSQL Database)
spring:
  config:
    activate:
      on-profile: railway
  datasource:
    url: ${DATABASE_URL}
    driverClassName: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
