version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: portfolio-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-portfolio_db}
      POSTGRES_USER: ${DB_USERNAME:-portfolio_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-portfolio_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-portfolio_user} -d ${DB_NAME:-portfolio_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  portfolio-service:
    build: .
    container_name: portfolio-service
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-portfolio_db}
      - DB_USERNAME=${DB_USERNAME:-portfolio_user}
      - DB_PASSWORD=${DB_PASSWORD:-portfolio_password}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:4200,http://localhost:8080}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - portfolio-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  portfolio-network:
    driver: bridge
